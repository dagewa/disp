\name{readMTZ}
\alias{readMTZ}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
%%  ~~function to do ... ~~
}
\description{
%%  ~~ A concise (1-5 lines) description of what the function does. ~~
}
\usage{
readMTZ(filename, messages = TRUE)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{filename}{
%%     ~~Describe \code{filename} here~~
}
  \item{messages}{
%%     ~~Describe \code{messages} here~~
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (filename, messages = TRUE) 
{
    f <- file(filename, open = "rb")
    mtzStamp <- readChar(f, 4)
    if (mtzStamp != "MTZ " || length(mtzStamp) == 0) {
        close(f)
        stop("readMTZ: file not recognised")
    }
    headerLoc <- readBin(f, "integer", n = 1, size = 4, signed = FALSE)
    machineStamp <- readChar(f, 4)
    seek(f, 80)
    numDataItems <- headerLoc - 20 - 1
    reflnData <- readBin(f, "numeric", n = numDataItems, size = 4)
    tagRead <- function(numChars) strsplit(readChar(f, numChars), 
        "[[:blank:]]+")[[1]]
    mtzHeader <- list()
    mtzHeader$VERS <- tagRead(80)
    mtzHeader$TITLE <- tagRead(80)
    mtzHeader$NCOL <- tagRead(80)
    mtzHeader$CELL <- tagRead(80)
    mtzHeader$SORT <- tagRead(80)
    mtzHeader$SYMINF <- tagRead(80)
    mtzHeader$SYMM <- NULL
    i <- 1
    repeat {
        temp <- tagRead(80)
        if (temp[1] == "SYMM") {
            mtzHeader$SYMM[[i]] <- temp
            i <- i + 1
        }
        else {
            (mtzHeader$RESO <- temp)
            break()
        }
    }
    mtzHeader$VALM <- tagRead(80)
    mtzHeader$COL <- NULL
    colNames <- NULL
    i <- 1
    repeat {
        temp <- tagRead(80)
        if (temp[1] == "COLUMN") {
            mtzHeader$COL[[i]] <- temp
            colNames[[i]] <- temp[2]
            i <- i + 1
        }
        else {
            (mtzHeader$NDIF <- temp)
            break()
        }
    }
    mtzHeader$PROJECT <- tagRead(80)
    mtzHeader$CRYSTAL <- tagRead(80)
    mtzHeader$DATASET <- tagRead(80)
    mtzHeader$DCELL <- tagRead(80)
    mtzHeader$DWAVEL <- tagRead(80)
    mtzHeader$BATCH <- NULL
    i <- 1
    repeat {
        temp <- tagRead(80)
        if (temp[1] == "BATCH") {
            mtzHeader$BATCH[[i]] <- temp
            i <- i + 1
        }
        else {
            (mtzHeader$END <- temp)
            break()
        }
    }
    close(f)
    numCols <- length(mtzHeader$COL)
    numRecords <- numDataItems/numCols
    dim(reflnData) <- c(numCols, numRecords)
    reflnData <- t(reflnData)
    colnames(reflnData) <- colNames
    reflnData <- as.data.frame(reflnData)
    reflnData$H <- as.integer(reflnData$H)
    reflnData$K <- as.integer(reflnData$K)
    reflnData$L <- as.integer(reflnData$L)
    reflnData$BATCH <- as.integer(reflnData$BATCH)
    if (messages) {
        cat("HEADER INFORMATION\n")
        cat(mtzHeader$VERS, "\n")
        cat(mtzHeader$TITLE, "\n")
        cat(mtzHeader$NCOL, "\n")
        cat(mtzHeader$CELL, "\n")
        cat(mtzHeader$SORT, "\n")
        cat(mtzHeader$SYMINF, "\n")
        for (line in mtzHeader$SYMM) cat(line, "\n")
        cat(mtzHeader$RESO, "\n")
        cat(mtzHeader$VALM, "\n")
        cat(mtzHeader$NDIF, "\n")
        cat(mtzHeader$PROJECT, "\n")
        cat(mtzHeader$CRYSTAL, "\n")
        cat(mtzHeader$DATASET, "\n")
        cat(mtzHeader$DCELL, "\n")
        cat(mtzHeader$DWAVEL, "\n")
        cat("COLUMN SUMMARY\n")
        print(summary(reflnData))
    }
    attr(reflnData, "mtzHeader") <- mtzHeader
    return(reflnData)
  }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
